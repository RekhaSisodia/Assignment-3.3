Assignment 3.3

Ques 1. Test whether two elements are exactly equal(element by element)
         vec1=c(rownames(mtcars[1:15,]))
         vec2=c(rownames(mtcars[11:25,]))

         identical(vec1,vec2)              #this will check both the vectors whether they are exactly equal or not.

Ques 2. Sort the character vector in ascending order and descending order.
        vec1=c(rownames(mtcars[1:15,]))
        vec2=c(rownames(mtcars[11:25,]))

        sort(vec1,decreasing = FALSE)
        sort(vec1,decreasing = TRUE)
        sort(vec2,decreasing = FALSE)
        sort(vec2,decreasing = TRUE)


Ques 3. What is the major diff. between str() and paste(). Show an example.
        str {utils}	
       Compactly Display the Structure of an Arbitrary R Object
       Description
       Compactly display the internal structure of an R object, a diagnostic function and an alternative to summary (and to some extent, dput). 
       Ideally, only one line for each ‘basic’ structure is displayed. It is especially well suited to compactly display the (abbreviated) contents of (possibly nested)
       lists. The idea is to give reasonable output for any R object. It calls args for (non-primitive) function objects.
      
       paste {base}	
       Concatenate Strings
       Description
       Concatenate vectors after converting to character.
       Details
       paste converts its arguments (via as.character) to character strings, and concatenates them (separating them by the string given by sep). If the arguments are 
       vectors, they are concatenated term-by-term to give a character vector result. Vector arguments are recycled as needed, with zero-length arguments being 
       recycled to "".



Ques 4. Introduce a separator when concatenating a strings.
  
        paste("Goodmorning", "Bangalore",sep = " ")   
   